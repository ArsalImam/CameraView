apply plugin: 'com.android.library'

// Required by bintray
version = '2.6.2'
group = 'com.otaliastudios'

//region android dependencies

android {
    compileSdkVersion rootProject.ext.compileSdkVersion

    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName project.version
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        testInstrumentationRunnerArgument "filter", "" +
                "com.otaliastudios.cameraview.tools.SdkExcludeFilter," +
                "com.otaliastudios.cameraview.tools.SdkIncludeFilter"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.mockito:mockito-inline:2.28.2'

    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test:rules:1.2.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'org.mockito:mockito-android:2.28.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    api 'androidx.exifinterface:exifinterface:1.1.0'
    api 'androidx.lifecycle:lifecycle-common:2.1.0'
    api 'com.google.android.gms:play-services-tasks:17.0.0'
    implementation 'androidx.annotation:annotation:1.1.0'
    implementation 'com.otaliastudios.opengl:egloo:0.4.0'
}

//endregion


//region javadoc and sources

// From official sample https://github.com/bintray/bintray-examples/blob/master/gradle-aar-example/build.gradle
task sourcesJar(type: Jar) {
    archiveClassifier.set('sources')
    from android.sourceSets.main.java.sourceFiles
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    classpath += project.files("${android.sdkDirectory}/platforms/${android.compileSdkVersion}/android.jar")
    project.android.libraryVariants.all { variant ->
        if (variant.name == 'release') {
            classpath += files(variant.javaCompile.classpath)
        }
    }
    exclude '**/BuildConfig.java'
    exclude '**/R.java'
    // This excludes our internal folder, which is nice, but also creates
    // errors anytime we reference excluded classes in public classes javadocs,
    // which is unfortunate. There might be a fix but I don't know any.
    // exclude '**/internal/**'
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    archiveClassifier.set('javadoc')
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

//endregion
